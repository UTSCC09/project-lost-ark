name: Publish Backend to GHCR

on:
  push:
    # Only run this workflow if it is a commit to main.
    branches:
      - main
    # Only run this workflow if the commit has modified files from lostark directory
    paths:
      - lostark/**

env:
  IMAGE_NAME: coinark-backend

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    defaults:
      run:
        working-directory: lostark

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into GitHub Container Registry
        # TODO: Create a Personal Access Tokens (PAT) with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT`
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
  deploy:
    needs: push
    name: Deploy Backend to Production
    runs-on: ubuntu-latest
    steps:
      - name: "Build and Deploy to Production Server"
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }} # IP address of VM
          username: ${{ secrets.SSH_USERNAME }} # Username to sign into VM as (e.g. root)
          # This is the private key generated in the server via ssh-keygen (remember to add the public key to the server's ~/.ssh/authorized_keys file too)
          key: ${{ secrets.SSH_KEY }}
          # script: |
          #   docker pull ghcr.io/utscc09/backend-garyjx
          #   docker rm -f $(docker ps -q -a --filter ancestor=ghcr.io/utscc09/backend-garyjx)
          #   docker run -d --rm -p 3000:3000 -v $(pwd)/db:/usr/src/app/db ghcr.io/utscc09/backend-garyjx
          
          # Note: First time, must scp the docker-compose.yml file to the server
          script: |
            cd cscc09-coinark
            docker-compose pull && docker-compose up -d
            